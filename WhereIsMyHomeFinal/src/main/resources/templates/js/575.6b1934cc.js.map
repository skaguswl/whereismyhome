{"version":3,"file":"js/575.6b1934cc.js","mappings":"sKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,cAAc,CAACE,YAAY,uBAAuB,CAACF,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,UAAU,CAACG,MAAM,CAAC,KAAO,KAAK,CAACH,EAAG,KAAK,CAACF,EAAIM,GAAG,YAAY,IAAI,GAAGJ,EAAG,QAAQ,CAACE,YAAY,QAAQ,CAACF,EAAG,QAAQ,CAACE,YAAY,cAAc,CAACF,EAAG,WAAW,CAACG,MAAM,CAAC,QAAU,mBAAmBE,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOR,EAAIS,WAAW,IAAI,CAACT,EAAIM,GAAG,UAAU,IAAI,GAAGJ,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,UAAU,CAACG,MAAM,CAAC,QAAU,GAAG,MAAQ,GAAG,MAAQL,EAAIU,SAAS,OAASV,EAAIW,QAAQJ,GAAG,CAAC,cAAcP,EAAIY,aAAaC,YAAYb,EAAIc,GAAG,CAAC,CAACC,IAAI,gBAAgBC,GAAG,SAASC,GAAM,MAAO,CAACf,EAAG,cAAc,CAACG,MAAM,CAAC,GAAK,CAAEa,KAAM,aAAcC,OAAQ,CAAEC,MAAOH,EAAKI,KAAKD,UAAY,CAACpB,EAAIM,GAAG,IAAIN,EAAIsB,GAAGL,EAAKI,KAAKE,SAAS,OAAO,QAAQ,IAAI,IAAI,EAC9wB,EACIC,EAAkB,G,oBC2BtB,GACAN,KAAAA,aACAD,OACA,OACAP,SAAAA,GAUAC,OAAAA,CACA,CAAAI,IAAAA,aAAAU,MAAAA,OAAAC,QAAAA,WACA,CAAAX,IAAAA,UAAAU,MAAAA,KAAAC,QAAAA,aACA,CAAAX,IAAAA,SAAAU,MAAAA,MAAAC,QAAAA,WACA,CAAAX,IAAAA,cAAAU,MAAAA,MAAAC,QAAAA,YAGA,EACAC,UACAC,EAAAA,EAAAA,IAAAA,QAAAA,MAAAA,EAAAX,WACA,0BAEA,EACAY,QAAAA,CACApB,YACA,mBAAAS,KAAAA,eACA,EACAN,YAAAA,GACA,mBACAM,KAAAA,aACAC,OAAAA,CAAAC,MAAAA,EAAAA,QAEA,ICjEmQ,I,UCQ/PU,GAAY,OACd,EACA/B,EACAyB,GACA,EACA,KACA,KACA,MAIF,EAAeM,EAAiB,O","sources":["webpack://whereismyhome/./src/components/qboard/QBoardList.vue","webpack://whereismyhome/src/components/qboard/QBoardList.vue","webpack://whereismyhome/./src/components/qboard/QBoardList.vue?919c","webpack://whereismyhome/./src/components/qboard/QBoardList.vue?ee69"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('b-container',{staticClass:\"bv-example-row mt-3\"},[_c('b-row',[_c('b-col',[_c('b-alert',{attrs:{\"show\":\"\"}},[_c('h3',[_vm._v(\"글목록\")])])],1)],1),_c('b-row',{staticClass:\"mb-1\"},[_c('b-col',{staticClass:\"text-right\"},[_c('b-button',{attrs:{\"variant\":\"outline-primary\"},on:{\"click\":function($event){return _vm.moveWrite()}}},[_vm._v(\"글쓰기\")])],1)],1),_c('b-row',[_c('b-col',[_c('b-table',{attrs:{\"striped\":\"\",\"hover\":\"\",\"items\":_vm.articles,\"fields\":_vm.fields},on:{\"row-clicked\":_vm.viewArticle},scopedSlots:_vm._u([{key:\"cell(subject)\",fn:function(data){return [_c('router-link',{attrs:{\"to\":{ name: 'qboardview', params: { qnaId: data.item.qnaId } }}},[_vm._v(\" \"+_vm._s(data.item.subject)+\" \")])]}}])})],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <b-container class=\"bv-example-row mt-3\">\r\n    <b-row>\r\n      <b-col>\r\n        <b-alert show><h3>글목록</h3></b-alert>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row class=\"mb-1\">\r\n      <b-col class=\"text-right\">\r\n        <b-button variant=\"outline-primary\" @click=\"moveWrite()\">글쓰기</b-button>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row>\r\n      <b-col>\r\n        <b-table striped hover :items=\"articles\" :fields=\"fields\" @row-clicked=\"viewArticle\">\r\n          <template #cell(subject)=\"data\">\r\n            <router-link :to=\"{ name: 'qboardview', params: { qnaId: data.item.qnaId } }\">\r\n              {{ data.item.subject }}\r\n            </router-link>\r\n          </template>\r\n        </b-table>\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport http from \"@/api/http\";\r\n\r\nexport default {\r\n  name: \"QBoardList\",\r\n  data() {\r\n    return {\r\n      articles: [\r\n        // {\r\n        //   qnaId: \"1\",\r\n        //   subject: \"aaaa\",\r\n        //   userid: \"a\",\r\n        //   regtime: \"111\",\r\n        //   hit: 1,\r\n        //   replystate: \"미답변\",\r\n        // },\r\n      ],\r\n      fields: [\r\n        { key: \"replyState\", label: \"답변상태\", tdClass: \"tdClass\" },\r\n        { key: \"subject\", label: \"제목\", tdClass: \"tdSubject\" },\r\n        { key: \"userid\", label: \"작성자\", tdClass: \"tdClass\" },\r\n        { key: \"createdDate\", label: \"작성일\", tdClass: \"tdClass\" },\r\n      ],\r\n    };\r\n  },\r\n  created() {\r\n    http.get(`/qna`).then(({ data }) => {\r\n      this.articles = data.content;\r\n    });\r\n  },\r\n  methods: {\r\n    moveWrite() {\r\n      this.$router.push({ name: \"qboardwrite\" });\r\n    },\r\n    viewArticle(article) {\r\n      this.$router.push({\r\n        name: \"qboardview\",\r\n        params: { qnaId: article.qnaId },\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scope>\r\n.tdClass {\r\n  width: 50px;\r\n  text-align: center;\r\n}\r\n.tdSubject {\r\n  width: 300px;\r\n  text-align: left;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QBoardList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QBoardList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./QBoardList.vue?vue&type=template&id=d7f0ef3c&\"\nimport script from \"./QBoardList.vue?vue&type=script&lang=js&\"\nexport * from \"./QBoardList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./QBoardList.vue?vue&type=style&index=0&id=d7f0ef3c&prod&scope=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","_v","on","$event","moveWrite","articles","fields","viewArticle","scopedSlots","_u","key","fn","data","name","params","qnaId","item","_s","subject","staticRenderFns","label","tdClass","created","http","methods","component"],"sourceRoot":""}